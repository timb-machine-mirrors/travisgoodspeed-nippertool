// Rendered by GoodASM
package main
var nipperpatchSymbols = map[string]int{
  "RESET": 0x4000,
  "loop": 0x002a,
  "moreshellcode": 0x0060,
  "respondax": 0x757f,
}
var nipperpatch = []byte {
          0x4e, 0x69, 0x70, 0x70, 0x65, 0x72, 0x54, 0x6f, 0x6f, 0x6c, 0x00, // 0000: 
          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // 000b: 
          0xae, 0x20,                                       // 0028: ldx #0x20
          0xd6, 0xff, 0xff,                                 // 002a: lda @0xffff, x; 0xffff replaced with source address.
          0xd7, 0x01, 0xa1,                                 // 002d: sta @0x01a1, x; 0x01a1 is end of buffer in SRAM, begins at 0x19c.
          0x5a,                                             // 0030: dec x
          0x2a, 0xf7,                                       // 0031: bpl loop
          0xa6, 0x93,                                       // 0033: lda #0x93  ; Response code 0x93.
          0xae, 0x40,                                       // 0035: ldx #0x40  ; Length in bytes.
          0xcd, 0x75, 0x7f,                                 // 0037: jsr respondax; Send response.
          0x9c,                                             // 003a: rsp        ; Reset the stack pointer.
          0xcc, 0x40, 0x00,                                 // 003b: jp RESET
          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // 003e: 
          0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x20, 0x67, 0x61, 0x70, 0x2e, // 0064: 
          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // 0071: 
          0x00, 0x01, 0x02, 0x03,                           // 0084: 
          0x05, 0x0a, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,   // 0088: 
          0x0c, 0x0d, 0x0e, 0x0f, 0x01, 0x01, 0x01, 0x00,   // 0090: 
          0x00, 0x00, 0xff, 0x07, 0x52, 0x56, 0x73, 0x03,   // 0098: 
          0xcd, 0xdc, 0x34, 0xc3,                           // 00a0: 
// 00a4: 
          0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, // 00a4: 
          0x00, 0x00, 0x00,                                 // 00bd: 
          0x00, 0x00, 0x01, 0xc4,                           // 00c0: ; Early entry, to shellcode at 0x019c.
}
