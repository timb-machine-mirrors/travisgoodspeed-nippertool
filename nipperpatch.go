// Rendered by GoodASM
package main
var nipperpatchSymbols = map[string]int{
  "RESET": 0x4000,
  "loop": 0x00a6,
  "respondax": 0x757f,
}
var nipperpatch = []byte {
          0x01, 0x02, 0x03, 0xa4, 0x05, 0x06, 0x07, 0x08,   // 0000: 
          0x09, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,   // 0008: 
          0x11, 0x02, 0x03, 0x04, 0x0a, 0x06, 0x07, 0x08,   // 0010: 
          0x59, 0x5a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,   // 0018: 
          0xc1, 0x02, 0x03, 0xd4, 0x05, 0x06, 0x07, 0xc8,   // 0020: 
          0x29, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,   // 0028: 
          0x31, 0xd2, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08,   // 0030: 
          0x39, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,   // 0038: 
          0x41, 0x02, 0x03, 0xd4, 0x05, 0x06, 0x07, 0x08,   // 0040: 
          0x49, 0x0a, 0x0b, 0x0c, 0x0d, 0x0e, 0x0f, 0x10,   // 0048: 
          0x51, 0x02, 0x03, 0x04, 0x05, 0x06, 0xe7, 0x08,   // 0050: 
          0x59, 0x0a, 0x0a, 0x0c, 0x0a, 0x0e, 0x0f, 0x10,   // 0058: 
          0x61, 0x02, 0x03, 0x04, 0x00, 0x01, 0x02, 0x03,   // 0060: 
          0x04, 0x05, 0x0b, 0x07, 0x08, 0x09, 0x0a, 0x0b,   // 0068: 
          0x0c, 0x0d, 0x0e, 0x0f, 0x00, 0xf1, 0x02, 0x03,   // 0070: 
          0x04, 0x05, 0xe6, 0x07, 0x08, 0x09, 0x0a, 0x0b,   // 0078: 
          0x0c, 0xfd, 0x0c, 0x0f, 0x00, 0x01, 0x02, 0x03,   // 0080: 
          0x05, 0x0a, 0x06, 0x07, 0x08, 0x09, 0x0a, 0x0b,   // 0088: 
          0x0c, 0x0d, 0x0e, 0x0f, 0x01, 0x01, 0x01, 0x00,   // 0090: 
          0x00, 0x00, 0xff, 0x07, 0x52, 0x56, 0x73, 0x03,   // 0098: 
          0xcd, 0xdc, 0x34, 0xc3,                           // 00a0: 
          0xae, 0x21,                                       // 00a4: ldx #0x21
          0xd6, 0xff, 0xff,                                 // 00a6: lda @0xffff, x; 0xffff replaced with source address.
          0xd7, 0x01, 0xa1,                                 // 00a9: sta @0x01a1, x; 0x01a1 is target address in SRAM.
          0x5a,                                             // 00ac: dec x
          0x2a, 0xf7,                                       // 00ad: bpl loop
          0xa6, 0x93,                                       // 00af: lda #0x93  ; Response code 0x93.
          0xae, 0x40,                                       // 00b1: ldx #0x40  ; Length in bytes.
          0xcd, 0x75, 0x7f,                                 // 00b3: jsr respondax; Send response.
          0x9c,                                             // 00b6: rsp        ; Reset the stack pointer.
          0xcc, 0x40, 0x00,                                 // 00b7: jp RESET
          0xff, 0xff, 0xff,                                 // 00ba: 
          0x00, 0x00, 0x00,                                 // 00bd: 
          0x00, 0x00, 0x00, 0x60,                           // 00c0: 
}
